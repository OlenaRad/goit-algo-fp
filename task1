class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def reverse(self):
        prev_node = None
        current_node = self.head
        while current_node is not None:
            next_node = current_node.next
            current_node.next = prev_node
            prev_node = current_node
            current_node = next_node
        self.head = prev_node

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    def print_list(self):
        current_node = self.head
        while current_node:
            print(current_node.data, end=' ')
            current_node = current_node.next
        print()

# Приклад використання:
linked_list = LinkedList()
linked_list.append(1)
linked_list.append(2)
linked_list.append(3)
linked_list.append(4)
linked_list.print_list()  # Output: 1 2 3 4
linked_list.reverse()
linked_list.print_list()  # Output: 4 3 2 1
def insertion_sort_linked_list(head):
    if head is None or head.next is None:
        return head

    sorted_head = None
    current = head

    while current is not None:
        next_node = current.next
        sorted_head = insert_node(sorted_head, current)
        current = next_node

    return sorted_head

def insert_node(sorted_head, new_node):
    if sorted_head is None or sorted_head.data >= new_node.data:
        new_node.next = sorted_head
        return new_node

    current = sorted_head
    while current.next is not None and current.next.data < new_node.data:
        current = current.next

    new_node.next = current.next
    current.next = new_node

    return sorted_head

# Приклад використання:
linked_list = LinkedList()
linked_list.append(3)
linked_list.append(2)
linked_list.append(4)
linked_list.append(1)
linked_list.print_list()  # Output: 3 2 4 1
linked_list.head = insertion_sort_linked_list(linked_list.head)
linked_list.print_list()  # Output: 1 2 3 4
def merge_sorted_lists(list1, list2):
    dummy_node = Node(0)
    tail = dummy_node

    while True:
        if list1 is None:
            tail.next = list2
            break
        if list2 is None:
            tail.next = list1
            break

        if list1.data <= list2.data:
            tail.next = list1
            list1 = list1.next
        else:
            tail.next = list2
            list2 = list2.next

        tail = tail.next

    return dummy_node.next

# Приклад використання:
list1 = LinkedList()
list1.append(1)
list1.append(3)
list1.append(5)

list2 = LinkedList()
list2.append(2)
list2.append(4)
list2.append(6)

merged_list = merge_sorted_lists(list1.head, list2.head)
merged_linked_list = LinkedList()
merged_linked_list.head = merged_list
merged_linked_list.print_list()  # Output: 1 2 3 4 5 6

