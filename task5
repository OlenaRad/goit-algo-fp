import queue
import uuid
import networkx as nx
import matplotlib.pyplot as plt

class Node:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key

def add_edges(graph, node, pos, x=0, y=0, layer=1):
    if node is not None:
        color = generate_color(layer)
        graph.add_node(node, color=color, label=node.val)
        if node.left:
            graph.add_edge(node, node.left)
            l = x - 1 / 2 ** layer
            pos[node.left] = (l, y - 1)
            l = add_edges(graph, node.left, pos, x=l, y=y - 1, layer=layer + 1)
        if node.right:
            graph.add_edge(node, node.right)
            r = x + 1 / 2 ** layer
            pos[node.right] = (r, y - 1)
            r = add_edges(graph, node.right, pos, x=r, y=y - 1, layer=layer + 1)
    return graph

def generate_color(layer):
    color = "#{:02X}{:02X}{:02X}".format(17 * layer, 125, 240 - 17 * layer)
    return color

def draw_tree_dfs(root):
    tree = nx.DiGraph()
    pos = {root: (0, 0)}
    tree = add_edges(tree, root, pos)
    colors = [node[1]['color'] for node in tree.nodes(data=True)]
    labels = {node[0]: node[1]['label'] for node in tree.nodes(data=True)}

    plt.figure(figsize=(10, 6))
    nx.draw(tree, pos=pos, labels=labels, arrows=False, node_size=2500, node_color=colors)
    plt.show()

def draw_tree_bfs(root):
    tree = nx.DiGraph()
    pos = {root: (0, 0)}
    visited = set()
    queue = [(root, 1)]
    layer = 1

    while queue:
        node, current_layer = queue.pop(0)
        if node not in visited:
            color = generate_color(layer)
            tree.add_node(node, color=color, label=node.val)
            visited.add(node)
            if node.left:
                tree.add_edge(node, node.left)
                l = -0.5 * (current_layer + 1)
                pos[node.left] = (l, -layer)
                queue.append((node.left, current_layer + 1))
            if node.right:
                tree.add_edge(node, node.right)
                r = 0.5 * (current_layer + 1)
                pos[node.right] = (r, -layer)
                queue.append((node.right, current_layer + 1))
            layer += 1

    colors = [node[1]['color'] for node in tree.nodes(data=True)]
    labels = {node[0]: node[1]['label'] for node in tree.nodes(data=True)}

    plt.figure(figsize=(10, 6))
    nx.draw(tree, pos=pos, labels=labels, arrows=False, node_size=2500, node_color=colors)
    plt.show()


# Приклад використання:
root = Node(0)
root.left = Node(1)
root.right = Node(2)
root.left.left = Node(3)
root.left.right = Node(4)
root.right.left = Node(5)
root.right.right = Node(6)

print("Обхід дерева у глибину:")
draw_tree_dfs(root)

print("Обхід дерева у ширину:")
draw_tree_bfs(root)
