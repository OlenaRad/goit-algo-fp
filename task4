import heapq
import uuid

import networkx as nx
import matplotlib.pyplot as plt

class HeapNode:
    def __init__(self, key, color="skyblue"):
        self.key = key
        self.color = color
        self.id = str(uuid.uuid4())  # Унікальний ідентифікатор для кожного вузла

def add_heap_edges(graph, heap, pos, x=0, y=0, layer=1):
    if heap:
        node = heap[0]
        graph.add_node(node.id, color=node.color, label=node.key)
        if 2 * layer - 1 < len(heap):
            left_child = heap[2 * layer - 1]
            graph.add_edge(node.id, left_child.id)
            l = x - 1 / 2 ** layer
            pos[left_child.id] = (l, y - 1)
            add_heap_edges(graph, heap, pos, x=l, y=y - 1, layer=2 * layer)
        if 2 * layer < len(heap):
            right_child = heap[2 * layer]
            graph.add_edge(node.id, right_child.id)
            r = x + 1 / 2 ** layer
            pos[right_child.id] = (r, y - 1)
            add_heap_edges(graph, heap, pos, x=r, y=y - 1, layer=2 * layer + 1)
    return graph

def draw_heap(heap):
    heap_graph = nx.DiGraph()
    pos = {}
    heap_graph = add_heap_edges(heap_graph, heap, pos)
    
    colors = [node[1]['color'] for node in heap_graph.nodes(data=True)]
    labels = {node[0]: node[1]['label'] for node in heap_graph.nodes(data=True)}

    plt.figure(figsize=(10, 6))
    nx.draw(heap_graph, pos=pos, labels=labels, arrows=False, node_size=2500, node_color=colors)
    plt.show()

# Приклад використання:
heap = [HeapNode(4), HeapNode(8), HeapNode(10), HeapNode(7), HeapNode(9), HeapNode(15)]
draw_heap(heap)
